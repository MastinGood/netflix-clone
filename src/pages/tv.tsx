import { getProducts, Product } from "@stripe/firestore-stripe-payments"
import Head from "next/head"
import { useRecoilValue } from "recoil"
import { modalState, movieState } from "../../atoms/modalAtom"
import Banner from "../../components/Banner"
import Header from "../../components/Header"
import Modal from "../../components/Modal"
import Plans from "../../components/Plans"
import Row from "../../components/Row"
import useAuth from "../../hooks/useAuth"
import useSubscription from "../../hooks/useSubscription"
import payments from "../../lib/stripe"
import { Movie } from "../../typing"
import requests from "../../utils/requests"

interface Props {
    airingToday: Movie[],
    popularTVShows: Movie[],
    topRatedTVShows: Movie[],
    tvOnTheAir: Movie[],
    products: Product[]
}

const tv = ({
    airingToday,
    popularTVShows,
    topRatedTVShows,
    tvOnTheAir,
    products
} : Props) => {
    const { loading, user } = useAuth()
    const showModal = useRecoilValue(modalState)
    const subscription = useSubscription(user)
    const movie = useRecoilValue(movieState)
  
    if (loading || subscription === null) return null
  
    if (!subscription) return <Plans products={products} />
    
    return (
        <>
          <div className="relative h-screen bg-gradient-to-b from-gray-900/10 to-[#010511] lg:h-[140vh]">
            <Head>
              {movie?.title || movie?.original_name || 'Home'} - Netflix
              <meta name="description" content="Generated by create next app" />
              <meta name="viewport" content="width=device-width, initial-scale=1" />
              <link rel="icon" href="/favicon.ico" />
            </Head>
    
            <Header/>
            
            <main className="relative px-4 pb-24 lg:space-y-24 lg:px-16">
            <Banner netflixOriginals={airingToday} />
              <section className="md:space-y-24">
              {/* <Row title="Trending Now" movies={latestTVShows} type="carousel"/> */}
              <Row title="TV Shows On Air" movies={tvOnTheAir} type="carousel"/>
              <Row title="Popular TV Shows" movies={popularTVShows} type="carousel"/>
              <Row title="Top Rated TV Shows" movies={topRatedTVShows} type="carousel"/>
              </section>
    
            </main>
            { showModal && <Modal/> }
          </div>
        </>
      )
}

export default tv

export const getServerSideProps = async () => {
    const products = await getProducts(payments, {
        includePrices: true,
        activeOnly: true,
    })
    .then((res) => res)
    .catch((error) => console.log(error.message))

    const [
        airingToday,
        popularTVShows,
        topRatedTVShows,
        tvOnTheAir
      ] = await Promise.all([
        fetch(requests.fetchAiringToday).then((res) => res.json()),
        fetch(requests.fetchPopularTV).then((res) => res.json()),
        fetch(requests.fetchTopRatedTVShows).then((res) => res.json()),
        fetch(requests.fetchTVOntheAir).then((res) => res.json())
      ])

    return {
        props: {
            airingToday : airingToday.results,
            popularTVShows : popularTVShows.results,
            topRatedTVShows : topRatedTVShows.results,
            tvOnTheAir : tvOnTheAir.results,
            products
        }
    }
}